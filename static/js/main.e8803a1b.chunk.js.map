{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","preparedTodos","userId","users","find","person","App","useState","todosList","setTodosList","todoTitle","setTodoTitle","userName","setUserName","userError","setUserError","titleError","setTitleError","method","onSubmit","event","preventDefault","newUser","length","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8803a1b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../react-app-env';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <>\n    <h2\n      className=\"user__name\"\n      data-cy=\"username\"\n    >\n      {user.name}\n    </h2>\n    <p\n      className=\"user__email\"\n      data-cy=\"email\"\n    >\n      {user.email}\n    </p>\n  </>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport './TodoInfo.scss';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'todoInfo',\n        {\n          'todoInfo--completed': todo.completed,\n        },\n      )}\n    >\n      <h2 className=\"todoInfo__title\">\n        <p>{todo.title}</p>\n        <p>{todo.completed}</p>\n      </h2>\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <li key={todo.id} className=\"todo-list__item\">\n        <TodoInfo todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport todos from './api/todos';\nimport users from './api/users';\nimport { Todo } from './react-app-env';\nimport { TodoList } from './components/TodoList/TodoList';\n\nconst preparedTodos: Todo[] = todos.map(todo => ({\n  ...todo,\n  user: users.find(person => todo.userId === person.id) || null,\n}));\n\nexport const App: React.FC = () => {\n  const [todosList, setTodosList] = useState<Todo[]>(preparedTodos);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [userName, setUserName] = useState(0);\n  const [userError, setUserError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newUser = {\n      userId: userName,\n      id: todosList[todosList.length - 1].id + 1,\n      title: todoTitle,\n      completed: false,\n      user: users.find(user => user.id === userName) || null,\n    };\n\n    setUserError(!userName);\n    setTitleError(!todoTitle);\n\n    if (userName && todoTitle) {\n      setTodosList([...todosList, newUser]);\n      setUserName(0);\n      setTodoTitle('');\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"title\">\n        ADD TODO FORM\n      </h1>\n\n      <form\n        className=\"app__form\"\n        method=\"GET\"\n        onSubmit={handleSubmit}\n      >\n        <input\n          className=\"title-input app__form--item\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Please enter the title\"\n          value={todoTitle}\n          onChange={(event) => {\n            setTodoTitle(event.target.value);\n            setTitleError(false);\n          }}\n        />\n\n        {(!todoTitle && titleError) && (\n          <span className=\"app__form--item error\">\n            Please enter the title\n          </span>\n        )}\n\n        <select\n          className=\"app__form--item user-select\"\n          name=\"user\"\n          value={userName}\n          data-cy=\"userSelect\"\n          onChange={(event) => {\n            setUserName(+event.target.value);\n            setUserError(false);\n          }}\n        >\n          <option disabled value=\"0\">\n            Choose a user\n          </option>\n          {users.map(user => (\n            <option key={user.id} value={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {(!userName && userError) && (\n          <span className=\"app__form--item error\">\n            Please choose a user\n          </span>\n        )}\n\n        <button\n          className=\"app__form--item button\"\n          type=\"submit\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}